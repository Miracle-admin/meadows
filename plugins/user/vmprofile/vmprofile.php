<?php/** * @copyright	Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved. * @license		GNU General Public License version 2 or later; see LICENSE.txt */defined('JPATH_BASE') or die('die');jimport('joomla.utilities.date');/** * An example custom profile plugin. * * @package		Joomla.Plugin * @subpackage	User.profile * @version		1.6 */class plgUserVmprofile extends JPlugin{	/**	 * Constructor	 *	 * @access      protected	 * @param       object  $subject The object to observe	 * @param       array   $config  An array that holds the plugin configuration	 * @since       1.5	 */	public function __construct(& $subject, $config)	{		parent::__construct($subject, $config);		$this->loadLanguage();		JFormHelper::addFieldPath(dirname(__FILE__) . '/fields');	}	function onUserAfterSave($data, $isNew, $result, $error)	{		require JPATH_SITE ."/components/com_vmvendor/helpers/functions.php";		 $userId	= JArrayHelper::getValue($data, 'id', 0, 'int');		//echo "<pre>User"; print_r($data);  die;				if (!class_exists( 'VmConfig' ))			require JPATH_ADMINISTRATOR . '/components/com_virtuemart/helpers/config.php';		VmConfig::loadConfig();		$dblang = VMLANG;		$image_path 			= VmConfig::get('media_vendor_path');		$vmconfig_img_width		= VmConfig::get('img_width');			if(!$vmconfig_img_width) $vmconfig_img_width = 90;		$thumb_path = $image_path.'resized/';		$app 					= JFactory::getApplication();		$user 					= JFactory::getUser($userId);				$juri 					= JURI::base();		$db						= JFactory::getDBO();			/* $model      			= $this->getModel ( 'editprofile' );		$view       			= $this->getView  ( 'editprofile','html' );		$Itemid 			= $app->input->get('Itemid'); */		//$data  = $this->input->post->get('jform', array(), 'array');		//$files = $this->input->files->get('jform');				$cparams 				= JComponentHelper::getParams( 'com_vmvendor' );				//print_r($cparams); 				$multilang_mode 		= $cparams->get('multilang_mode', 0);		if($multilang_mode >0)		{			//$active_languages	=	VmConfig::get( 'active_languages' );			$lang = JFactory::getLanguage(); 			$dblang = strtolower( str_replace('-' , '_' , $lang->getTag() ) );		}		$profileman 			= $cparams->get( 'profileman' );		$maximgside 			= $cparams->get('maximgside', '800');		$thumbqual 				= $cparams->get('thumbqual', 90);		$wysiwyg_prof			= $cparams->get('wysiwyg_prof', 1);		$paypalemail_field		= $cparams->get('paypalemail_field', 1);				$vendor_title						=	$data['name'];		$vendor_telephone					=	''; //$data['vendor_telephone'];		$vendor_url							=	$data['profileUrl'];		$vendor_store_desc					=	''; //$data['vendor_store_desc'];		$vendor_terms_of_service			=	''; //$data['terms'];		$vendor_legal_info					=	''; //$data['vendor_legal_info'];		$paypal_email					=	$data['email'];				//echo "<pre>data - "; print_r($user);		//echo "<br/> paypalemail_field".  $paypalemail_field; 				if($paypalemail_field == 1)		{						$q ="SELECT id, paypal_email FROM `#__vmvendor_paypal_emails` WHERE userid='".$user->id."' ";			$db->setQuery($q);			$paypalemail_data = $db->loadObject();			if($paypalemail_data->id>0 && $paypalemail_data->paypal_email != $paypal_email)			{				$q = "UPDATE #__vmvendor_paypal_emails SET paypal_email='".$paypal_email."' WHERE userid='".$user->id."'" ;				$db->setQuery($q);				if (!$db->query()) die($db->stderr(true));			}			elseif(!$paypalemail_data->id && $paypal_email!='' )			{				$q = "INSERT INTO `#__vmvendor_paypal_emails`  (userid,vendorid, paypal_email)				VALUES	('".$user->id."' , '".VmvendorFunctions::getVendorid($user->id) ."' ,'".$paypal_email."' )";								$db->setQuery($q);				if (!$db->query()) die($db->stderr(true));			}		}				$activity_stream					=	'1'; //&$data['activity_stream'];		$slug								= str_replace( " " , "-" , $vendor_title );		$slug								= $user->id.'-'.str_replace( "'" , "-" , strtolower( $slug ) );										$vendor_id = VmvendorFunctions::getVendorid($user->id);						//echo "vendor_id "; print_r($vendor_id);				if(!$vendor_id)		{						VmvendorFunctions::createVendor( $user->id );			$vendor_id = VmvendorFunctions::getVendorid($user->id);					}		$update = 1;									if($multilang_mode > 0)			{ // check if data allready exists in the current language to know if we update or insert.				 $q = "SELECT  COUNT(*)  FROM `#__virtuemart_vendors_".$dblang."`  WHERE `virtuemart_vendor_id` 	='".$vendor_id."' ";				$db->setQuery($q);				$allready_in = $db->loadResult();					if($allready_in <1)				{					$update = 0;				$q = "INSERT INTO `#__virtuemart_vendors_".$dblang."` 					( `virtuemart_vendor_id` , `vendor_store_desc` , `vendor_terms_of_service` , `vendor_legal_info` , `vendor_store_name` , `vendor_phone` , `vendor_url` , `slug` ) 					VALUES					('".$vendor_id."' , 					'".$db->escape( $vendor_store_desc )."'  ,					 '".$db->escape( $vendor_terms_of_service )."' ,					 '".$db->escape( $vendor_legal_info )."' , 					 '".$db->escape( $vendor_title )."' , 					 '".$db->escape( $vendor_telephone )."' , 					 '".$db->escape( $vendor_url )."' , 					 '".$db->escape( $slug )."'  ) ";								$db->setQuery($q);					if (!$db->query()) die($db->stderr(true));				}			}						if($update==1)			{			 $q = "UPDATE `#__virtuemart_vendors_".$dblang."` SET 				`vendor_store_desc` 			= 'yrtyreytreyt'  ,				`vendor_terms_of_service` 		= 'vendor_terms_of_service' , 				`vendor_legal_info` 			= 'vendor_legal_info' , 				`vendor_store_name`				= '".$db->escape( $vendor_title )."' , 				`vendor_phone` 					= '465465465' , 				`vendor_url` 					= '".$db->escape( $vendor_url )."' , 				`slug` 							= '".$db->escape( $slug )."' 				WHERE `virtuemart_vendor_id`='".$vendor_id."' ";											$db->setQuery($q);                               				if (!$db->query()) die($db->stderr(true));								$q = "UPDATE `#__virtuemart_vendors` SET 				`vendor_name`				= '".$db->escape( $vendor_title )."' 				WHERE `virtuemart_vendor_id`='".$vendor_id."' ";							$db->setQuery($q);				if (!$db->query()) die($db->stderr(true));			} 						//echo "<pre>data - "; print_r($data);  die;		/* ---------		sdrs_vmvendor_paypal_emails 		key (userid 	vendorid 	paypal_email) 		value(id, 0, email)		---------------- */				/* if ($userId && $result && isset($data['profile']) && (count($data['profile'])))		{			try			{				//Sanitize the date				if (!empty($data['profile']['dob']))				{					$date = new JDate($data['profile']['dob']);					$data['profile']['dob'] = $date->format('Y-m-d');				}				$db = JFactory::getDbo();				$db->setQuery(					'DELETE FROM #__user_profiles WHERE user_id = '.$userId .					" AND profile_key LIKE 'profile.%'"				);				if (!$db->query())				{					throw new Exception($db->getErrorMsg());				}				$tuples = array();				$order	= 1;				foreach ($data['profile'] as $k => $v)				{					$tuples[] = '('.$userId.', '.$db->quote('profile.'.$k).', '.$db->quote(json_encode($v)).', '.$order++.')';				}				$db->setQuery('INSERT INTO #__user_profiles VALUES '.implode(', ', $tuples));				if (!$db->query())				{					throw new Exception($db->getErrorMsg());				}			}			catch (JException $e)			{				$this->_subject->setError($e->getMessage());				return false;			}		} */		return true;	}	function createVendor( $user_id )	{		if (!class_exists( 'VmConfig' ))			require JPATH_ADMINISTRATOR . '/components/com_virtuemart/helpers/config.php';		VmConfig::loadConfig();		$cparams 		= JComponentHelper::getParams('com_vmvendor');		$naming 		= $cparams->get('naming', 'username');		$acy_listid		= $cparams->get('acy_listid');		$multilang_mode = $cparams->get('multilang_mode', 0);		if($multilang_mode >0)		{			$active_languages	=	VmConfig::get( 'active_languages' ); //en-GB		}				$db				= JFactory::getDBO();		$app			= JFactory::getApplication();		$juser			= JFactory::getUser();		$user_name 		= $juser->name; 		$user_username 	= $juser->username; 		$user_email 	= $juser->email;		$user_naming 	= $juser->$naming;		$user_slug = JFilterOutput::stringURLSafe($user_id.'-'.$user_username);			  ////////////////// We create the vendor and create the vmuser or update if allready exists as a customer 					// look for main vendor currency		$q ="SELECT `vendor_currency` FROM `#__virtuemart_vendors` WHERE `virtuemart_vendor_id` ='1' " ;		$db->setQuery($q);		$currency_id = $db->loadResult();		$q = "INSERT INTO `#__virtuemart_vendors` 		( `vendor_name` , `vendor_currency` , `vendor_accepted_currencies` , `vendor_params` , `created_on` , `created_by` , `modified_on` , `modified_by` , `locked_on` , `locked_by` ) 		VALUES 		('".$db->escape($user_naming)."' , '".$currency_id."' , '' , 'vendor_min_pov=0|vendor_min_poq=1|vendor_freeshipment=0|vendor_address_format=\"\"|vendor_date_format=\"\"|' , '".date('Y-m-d H:i:s')."' , '".$user_id."' , '".date('Y-m-d H:i:s')."' , '".$user_id."' , '0000-00-00 00:00:00' , '0') ";		$db->setQuery($q);		if (!$db->query()) die($db->stderr(true));				$vendorid = $db->insertid();						$q = "INSERT INTO `#__virtuemart_vendors_".VMLANG."`  		( `virtuemart_vendor_id` ,  `vendor_store_name` , `slug` ) 		VALUES 		('".$vendorid."' ,  '".$db->escape($user_naming)."' , '".$db->escape($user_slug)."') ";		$db->setQuery($q);		if (!$db->query()) die($db->stderr(true));				$q = "INSERT INTO `#__virtuemart_vendor_users`  		( `virtuemart_vendor_id` , `virtuemart_user_id` ) 		VALUES 		('".$vendorid."' , '". $db->escape($user_id)."') ";		$db->setQuery($q);		if (!$db->query()) die($db->stderr(true));		if($multilang_mode >0)		{ //								for($i = 0 ; $i < count( $active_languages ) ; $i++)			{				if( str_replace('_' , '-' , VMLANG) != strtolower( $active_languages[$i]) )				{					$q = "INSERT INTO `#__virtuemart_vendors_".strtolower( str_replace('-' , '_' , $active_languages[$i]) ) ."`  					( `virtuemart_vendor_id` ,  `vendor_store_name` ,  `slug` ) 					VALUES 					('".$vendorid."' ,  '".$db->escape($user_naming)."' , '".$db->escape($user_slug)."') ";					$db->setQuery($q);					if (!$db->query()) die($db->stderr(true));				}			}		}								if($virtuemart_vendor_id==='0')		{  // vmuser allready (has allready created a customer profile)			$q = "UPDATE `#__virtuemart_vmusers`  			 SET `virtuemart_vendor_id` ='".$vendorid."', 			 `user_is_vendor` = '1' 			 WHERE `virtuemart_user_id` ='".$user_id."' ";			$db->setQuery($q);			if (!$db->query()) die($db->stderr(true));			$message = '<i class="vmv-icon-ok"></i> '.JText::_('COM_VMVENDOR_VMVENADD_USERUPDATEDVENDOR');		}		elseif(!$virtuemart_vendor_id)		{ //vmuser does not exist, we create it (without a customer_number...)					$q = "INSERT INTO `#__virtuemart_vmusers`  	( `virtuemart_user_id` , `virtuemart_vendor_id` , `user_is_vendor` , `customer_number`  ) 						VALUES 	('".$user_id."' , '".$vendorid."' , '1', '' )";			$db->setQuery($q);			if (!$db->query()) die($db->stderr(true));			$message = '<i class="vmv-icon-ok"></i> '.JText::_('COM_VMVENDOR_VMVENADD_VENDORCREATED');		}		$virtuemart_vendor_id = $vendorid;		if($acy_listid!='')		{ // we subscribe the member to the vendor mailing list			// is new vendor allready subscribed? to that list!?			$q = "SELECT COUNT(acyl.`subid`)  			FROM `#__acymailing_listsub` acyl 			LEFT JOIN `#__acymailing_subscriber` acys ON acys.`subid` = acyl.`subid` 			WHERE acys.`userid` = '".$user_id."' 			AND acyl.`listid` ='".$acy_listid."' ";			$db->setQuery($q);			$is_subscribed = $db->loadResult();			if( $is_subscribed < 1 )			{				$q = "SELECT COUNT(*) FROM `#__acymailing_subscriber` WHERE `userid`='".$user_id."' ";				$db->setQuery($q);				$is_subscriber = $db->loadresult();				if( $is_subscriber <1 )				{										$q ="INSERT INTO `#__acymailing_subscriber` 					(`email` , `userid`, `name` , `created` , `confirmed`, `enabled`, `accept`, `html` )					VALUES 					('".$user_email."','".$user_id."','".$user_name."','".time()."','1','1','1','1' ) ";					$db->setQuery($q);					if (!$db->query()) die($db->stderr(true));					$subid = $db->insertid();				}				else				{					$q ="SELECT `subid` FROM `#__acymailing_subscriber` WHERE `userid` ='".$user_id."' ";						$db->setQuery($q);					$subid = $db->loadResult();				}				$q ="INSERT INTO `#__acymailing_listsub` 					(`listid` , `subid` , `subdate` , `status`) 					VALUES 					('".$acy_listid."' , '".$subid."' , '".time()."' , '1' ) ";				$db->setQuery($q);				if (!$db->query()) die($db->stderr(true));				}		}		$app->enqueueMessage( $message );	}		function getVendorid($user)	{			$db		= JFactory::getDBO();			$q = "SELECT  `virtuemart_vendor_id` FROM `#__virtuemart_vmusers` WHERE `virtuemart_user_id` = '".$user."' ";		$db->setQuery($q);		return $vendor_id = $db->loadResult();		}			/**	 * Remove all user profile information for the given user ID	 *	 * Method is called after user data is deleted from the database	 *	 * @param	array		$user		Holds the user data	 * @param	boolean		$success	True if user was succesfully stored in the database	 * @param	string		$msg		Message	 *//* 	function onUserAfterDelete($user, $success, $msg)	{		if (!$success)		{			return false;		}		$userId	= JArrayHelper::getValue($user, 'id', 0, 'int');		if ($userId)		{			try			{				$db = JFactory::getDbo();				$db->setQuery(					'DELETE FROM #__user_profiles WHERE user_id = '.$userId .					" AND profile_key LIKE 'profile.%'"				);				if (!$db->query())				{					throw new Exception($db->getErrorMsg());				}			}			catch (JException $e)			{				$this->_subject->setError($e->getMessage());				return false;			}		}		return true;	} */}